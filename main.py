import logging
import asyncio
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from config import TELEGRAM_BOT_TOKEN, PORT
from message_parser import SaleMessageParser
from simple_storage import SimpleStorageManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class SalesBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –¥–ª—è —É—á–µ—Ç–∞ –ø—Ä–æ–¥–∞–∂"""
    
    def __init__(self):
        self.parser = SaleMessageParser()
        self.storage = SimpleStorageManager()
        self.application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
        self._setup_handlers()
    
    def _setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –ö–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("stats", self.stats_command))
        self.application.add_handler(CommandHandler("export", self.export_command))
        self.application.add_handler(CommandHandler("sheets", self.sheets_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(
            MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message)
        )
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        welcome_message = """
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è —É—á–µ—Ç–∞ —Ä–µ–∫–ª–∞–º—ã!

‚ö°Ô∏è –ë—ã—Å—Ç—Ä—ã–π (–±–µ–∑ –∑–∞–ø—è—Ç—ã—Ö, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∫–∏–¥–∞–ª):
‚Ä¢ "@n2342rik 12.10 1845 6000—Ä —Ä—É—Å—Å–∫–∏–π –±–∏–∑"
‚Ä¢ "@ivan 16.12 1430 200usdt –∫–∞–Ω–∞–ª"
‚Ä¢ "@maria 20.01.2025 1800 5000—Ä –≥—Ä—É–ø–ø–∞"

–Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ–∫—É:
üë§ –ù–∏–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
üìÖ –î–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
üí∞ –°—É–º–º—É –ø–æ–∫—É–ø–∫–∏ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 5000—Ä, 200usdt)
üì∫ –ò—Å—Ç–æ—á–Ω–∏–∫ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è

üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
/stats ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
/export ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
/sheets ‚Äî —Å—Ç–∞—Ç—É—Å Google Sheets
        """
        await update.message.reply_text(welcome_message)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_message = """
üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:

1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ —Ä–µ–∫–ª–∞–º—ã –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
2Ô∏è‚É£ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ—Ç:
   üë§ –ù–∏–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (@username)
   üìÖ –î–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
   üí∞ –°—É–º–º—É –ø–æ–∫—É–ø–∫–∏ (usdt, ‚ÇΩ, btc, eth)
   üì∫ –ò—Å—Ç–æ—á–Ω–∏–∫ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è

3Ô∏è‚É£ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü—É

üî§ –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:

üìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π (—Å –∑–∞–ø—è—Ç—ã–º–∏ –∏ –∫–∞–≤—ã—á–∫–∞–º–∏):
‚Ä¢ "@nikita 15.12.2025 –Ω–∞ 19:30 200usdt \"—Å–æ–ª—å –¥–∞ –ø–µ—Ä–µ—Ü\""
‚Ä¢ "@ivan –≤—á–µ—Ä–∞ –Ω–∞ 14:00 150‚ÇΩ \"–∫—Ä–∏–ø—Ç–æ–∫–∞–Ω–∞–ª\""

‚ö° –ë—ã—Å—Ç—Ä—ã–π (–±–µ–∑ –∑–∞–ø—è—Ç—ã—Ö, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∫–∏–¥–∞–ª):
‚Ä¢ "@n2342rik 12.10 1845 6000—Ä —Ä—É—Å—Å–∫–∏–π –±–∏–∑"
‚Ä¢ "@ivan 16.12 1430 200usdt –∫–∞–Ω–∞–ª"
‚Ä¢ "@maria 20.01.2025 1800 5000—Ä –≥—Ä—É–ø–ø–∞"
‚Ä¢ "@alex 25.12 1200 0.01btc –±–ª–æ–≥"

üìä –ö–æ–º–∞–Ω–¥—ã:
/start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–π
/export ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ CSV
/sheets ‚Äî —Å—Ç–∞—Ç—É—Å Google Sheets
        """
        await update.message.reply_text(help_message)
    
    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
        try:
            stats = self.storage.get_stats()
            
            stats_message = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∫–ª–∞–º—ã:

üìà –í—Å–µ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏–π: {stats['total']}
üí∞ USDT: {stats['usdt_count']} ({stats['usdt_total']:.0f} USDT)
üí¥ –†—É–±–ª–∏: {stats['rub_count']} ({stats['rub_total']:.0f}‚ÇΩ)

üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Ñ–∞–π–ª: sales_data.csv
            """
            
            await update.message.reply_text(stats_message)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
    
    
    async def export_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /export"""
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º CSV —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            with open('sales_data.csv', 'rb') as file:
                await update.message.reply_document(
                    document=file,
                    filename='sales_data.csv',
                    caption='üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö'
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö.")
    
    async def sheets_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sheets –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Google Sheets"""
        try:
            if self.storage.google_sheets.is_connected():
                message = """
‚úÖ Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω!

üìä –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è —Å Google Sheets
üîó –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∏–∑ config.py

üí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ —Ñ–∞–π–ª–µ GOOGLE_SHEETS_SETUP.md
                """
            else:
                message = """
‚ùå Google Sheets –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω

üìù –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π CSV —Ñ–∞–π–ª
üîß –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Google Sheets:
1. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ GOOGLE_SHEETS_SETUP.md
2. –î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª credentials.json –≤ –ø–∞–ø–∫—É —Å –±–æ—Ç–æ–º
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞

üíæ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ñ–∞–π–ª–µ sales_data.csv
                """
            
            await update.message.reply_text(message)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Google Sheets: {e}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ Google Sheets.")
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–æ–¥–∞–∂–∞—Ö"""
        message_text = update.message.text
        user_id = update.effective_user.id
        username = update.effective_user.username or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username} ({user_id}): {message_text}")
        
        try:
            # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            parsed_data = self.parser.parse_message(message_text)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            is_valid, error_message = self.parser.validate_parsed_data(parsed_data)
            
            if not is_valid:
                await update.message.reply_text(
                    f"‚ùå {error_message}\n\n"
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤.\n\n"
                    "–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:\n"
                    "‚Ä¢ @nikita 15.12.2025 –Ω–∞ 19:30 200usdt \"—Å–æ–ª—å –¥–∞ –ø–µ—Ä–µ—Ü\"\n"
                    "‚Ä¢ @ivan –≤—á–µ—Ä–∞ –Ω–∞ 14:00 150‚ÇΩ \"–∫—Ä–∏–ø—Ç–æ–∫–∞–Ω–∞–ª\"\n"
                    "‚Ä¢ @maria —Å–µ–≥–æ–¥–Ω—è –Ω–∞ 20:15 0.01btc \"—Ç–µ–ª–µ–≥—Ä–∞–º –≥—Ä—É–ø–ø–∞\""
                )
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            success = self.storage.add_sale_record(
                buyer=parsed_data['buyer'],
                datetime=parsed_data['datetime'],
                amount=parsed_data['amount'],
                source=parsed_data['source']
            )
            
            if success:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                confirmation = f"""
‚úÖ –†–µ–∫–ª–∞–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞!

üë§ –ù–∏–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: {parsed_data['buyer']}
üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {parsed_data['datetime']}
üí∞ –°—É–º–º–∞: {parsed_data['amount']}
üì∫ –ò—Å—Ç–æ—á–Ω–∏–∫ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {parsed_data['source']}

üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ sales_data.csv
üìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                """
                await update.message.reply_text(confirmation)
            else:
                await update.message.reply_text(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                )
        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
    
    async def error_handler(self, update: object, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"Exception while handling an update: {context.error}")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(self.error_handler)
        
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        self.application.run_polling(allowed_updates=Update.ALL_TYPES)

def test_parser_locally():
    """–õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞"""
    from message_parser import SaleMessageParser
    from simple_storage import SimpleStorageManager
    
    print("üîç –õ–û–ö–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–ê–†–°–ï–†–ê")
    print("=" * 50)
    
    parser = SaleMessageParser()
    storage = SimpleStorageManager()
    
    test_message = "@swagger 15.09 1230 65—é—Å–¥—Ç –±–∏–±"
    print(f"üìù –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{test_message}'")
    
    # –ü–∞—Ä—Å–∏–º
    parsed = parser.parse_message(test_message)
    print(f"üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {parsed['buyer']}")
    print(f"üìÖ –î–∞—Ç–∞/–≤—Ä–µ–º—è: {parsed['datetime']}")
    print(f"üí∞ –°—É–º–º–∞: {parsed['amount']}")
    print(f"üì∫ –ò—Å—Ç–æ—á–Ω–∏–∫: {parsed['source']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
    is_valid, error = parser.validate_parsed_data(parsed)
    print(f"‚úÖ –í–∞–ª–∏–¥–Ω–æ: {is_valid}")
    if not is_valid:
        print(f"‚ùå –û—à–∏–±–∫–∞: {error}")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    success = storage.add_sale_record(
        buyer=parsed['buyer'],
        datetime=parsed['datetime'],
        amount=parsed['amount'],
        source=parsed['source']
    )
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {success}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = storage.get_stats()
    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total']}")

def create_web_server():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway"""
    from http.server import HTTPServer, BaseHTTPRequestHandler
    import threading
    
    class HealthCheckHandler(BaseHTTPRequestHandler):
        def do_GET(self):
            if self.path == '/health':
                self.send_response(200)
                self.send_header('Content-type', 'text/plain')
                self.end_headers()
                self.wfile.write(b'OK')
            else:
                self.send_response(404)
                self.end_headers()
    
    def run_server():
        server = HTTPServer(('0.0.0.0', PORT), HealthCheckHandler)
        logger.info(f"Web server running on port {PORT}")
        server.serve_forever()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    server_thread = threading.Thread(target=run_server, daemon=True)
    server_thread.start()

if __name__ == "__main__":
    import sys
    if len(sys.argv) > 1 and sys.argv[1] == "test":
        test_parser_locally()
    elif len(sys.argv) > 1 and sys.argv[1] == "debug":
        from debug_env import debug_environment
        debug_environment()
    else:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway
        create_web_server()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot = SalesBot()
        bot.run()
